/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.softlab.efr.services.auth.controllers;

import ru.softlab.efr.services.auth.exchange.model.OfficeData;
import ru.softlab.efr.services.auth.exchange.model.OrgUnitsData;
import ru.softlab.efr.services.auth.exchange.model.OrgUnitsDataFull;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.validation.BindingResult;
import org.springframework.data.web.PageableDefault;
import org.springframework.data.domain.*;

import java.util.*;

import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * the OrgUnit API
 */
public interface OrgUnitApi {

    /**
     * Получить полные данные по структурному подразделению. 
     * @param id Идентификатор ОШС  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/orgunit/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OfficeData> getOrgUnit(@PathVariable("id") Long id) throws Exception;



    /**
     * Получить список дочерних организационных структур. 
     * @param id Идентификатор ОШС  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/orgunits/children/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OrgUnitsData> listChildOrgUnit(@PathVariable("id") Long id) throws Exception;



    /**
     * Получить полный список организационных структур.   
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/orgunits",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OrgUnitsDataFull> listFullOrgUnits() throws Exception;



    /**
     * Получить список организационных структур указанного типа. 
     * @param orgUnitType Тип ОШС, допустимые значения 0(РФ), 1(ВСП)  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/orgunits/type/{orgUnitType}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OrgUnitsData> listOrgUnitByType(@PathVariable("orgUnitType") Long orgUnitType) throws Exception;


}
