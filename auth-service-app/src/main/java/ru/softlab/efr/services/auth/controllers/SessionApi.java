/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.softlab.efr.services.auth.controllers;

import ru.softlab.efr.services.auth.exchange.model.CreateSessionRq;
import ru.softlab.efr.services.auth.exchange.model.CreateSessionRs;
import ru.softlab.efr.services.auth.exchange.model.ErrorData;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.validation.BindingResult;
import org.springframework.data.web.PageableDefault;
import org.springframework.data.domain.*;

import java.util.*;

import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * the Session API
 */
public interface SessionApi {

    /**
     * Запрос создания сессии (аутентификация) 
     * @param createSessionRq Тело запроса создания сессии (аутентификация)  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/session",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<CreateSessionRs> authenticate(@Valid @RequestBody CreateSessionRq createSessionRq) throws Exception;



    /**
     * Запрос закрытия сессии 
     * @param id Идентификатор сессии  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/session/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> closeSession(@PathVariable("id") String id) throws Exception;



    /**
     * Запрос обновления сессии 
     * @param id Идентификатор сессии
     * @param officeName Наименование офиса пользователя
     * @param branchName Наименование филиала пользователя  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/auth/v1/session/{id}",
        method = RequestMethod.POST)
    ResponseEntity<Void> updateSession(@PathVariable("id") String id,@NotNull  @Valid @RequestParam(value = "officeName") String officeName,@NotNull  @Valid @RequestParam(value = "branchName") String branchName) throws Exception;


}
